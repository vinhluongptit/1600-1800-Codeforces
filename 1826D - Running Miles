#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds;
const int mod = 1e9 + 7;
using ll = long long;
typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;



int main() {
	ios::sync_with_stdio(false);
	cin.tie(NULL);
    int t;
    cin >> t;
    while(t--){
    	int n; cin >> n;
    	vector<ll> v(n), pref1(n, 0), pref2(n, 0);
    	ll ans = 0;
    	for(int i = 0; i < n; i++){
    		cin >> v[i];
		}
		for(int i = 0; i < n; i++){
			pref1[i] = v[i] + i + 1;
			if(i != 0) pref1[i] = max(pref1[i], pref1[i-1]);
		}
		for(int i = n-1; i >= 0; i--){
			pref2[i] = v[i] - (i+1);
			if(i != (n-1)) pref2[i] = max(pref2[i], pref2[i+1]);
		}
		for(int i = 1; i < n-1; i++){
			ans = max(ans, v[i] + pref1[i-1] + pref2[i+1]);
		}
		cout << ans;
		cout << endl;
	}
}
