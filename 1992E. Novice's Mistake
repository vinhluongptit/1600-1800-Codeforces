#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds;
const int mod = 1e9 + 7;
using ll = long long;
typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;

int main(){
    int t; cin >> t;
    while(t--){
    	string n; cin >> n;
    	vector<string> v(6);
    	string s = "";
    	for(int i = 0; i <= 10; i++){
    		s += n;
		}
    	for(int i = 1; i <= 5; i++){
    		v[i] = s.substr(0, i);
		}
		vector<pair<int,int>> ans;
		
		for(int i = 2; i <= 10000; i++){
			for(int k = 1; k <= 5; k++){
				int j = i*n.size()-k;
				if((stoi(v[k]) == i*stoi(n) - j) && (i*n.size() - j == v[k].size())){
					pair<int,int> p = {i, j};
					ans.push_back(p);
				}
			}
		}
		cout << ans.size() << endl;
		for(auto it : ans){
			cout << it.first << " " << it.second << endl;
		}
	}
}
