#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds;
using ll = long long;
const int mod = 1e9 + 7;
typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;

int main() {
	int t;
	cin >> t;
	while(t--){
		ll n; scanf("%d", &n);
		vector<ll> a(n), b(n);
		for(int i = 0; i < n; i++){
			scanf("%lld%lld", &a[i], &b[i]);
		}
		ll tot = 0;
		ll tmp = 1e18;
		for(int i = 0; i < n; i++){
			int idx;
			if(i == 0) idx = n-1;
			else idx = i-1;
			ll cost = max(0LL, a[i] - b[idx]);
			tot += cost;
			tmp = min(tmp, a[i] - cost);
		}
		cout << tot + tmp << endl;
	}
}
