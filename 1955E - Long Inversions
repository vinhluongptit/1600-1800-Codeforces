#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds;
const int mod = 1e9 + 7;
using ll = long long;
typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;

int main() {
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	int t; cin >>t;
	while(t--){
		int n; cin >> n;
		string s; cin >> s;
		vector<int> pref(n+1, 0);
		for(int i = n; i >= 1; i--){
			int tmp = 0;
			for(int i = 0; i <= n; i++){
				pref[i] = 0;
			}
			for(int j = 0; j < n-i+1; j++){
				tmp += pref[j];
				if((s[j] == '0' && tmp % 2 == 0) || (s[j] == '1' && tmp & 1)){
					tmp++;
					pref[j+i]--;
				}
			}
			int ok = 1;
			for(int j = n-i+1; j < n; j++){
				tmp += pref[j];
				if((s[j] == '0' && tmp % 2 == 0) || (s[j] == '1' && tmp & 1)){
					ok = 0;
					break;
				}
			}
			if(ok){
				cout << i << endl;
				break;
			}
		}
	}
}
