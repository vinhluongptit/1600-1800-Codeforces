#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds;
const int mod = 1e9 + 7;
using ll = long long;
typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;



int main() {
	ios::sync_with_stdio(false);
	cin.tie(NULL);
    int t;
    cin >> t;
    while(t--){
    	int n; cin >> n;
    	vector<int> a(n), b(n);
    	map<int, set<int>> mp;
    	int ok = 1;
    	for(int i = 0; i < n; i++){
    		cin >> a[i];
		}
		for(int i = 0; i < n; i++){
    		cin >> b[i];
    		mp[b[i]].insert(i);
		}
		int cnt = 0;
		for(int i = 0; i < n; i++){
			if(a[i] != b[i]){
				if(mp[a[i]].empty()){
					ok = 0;
					break;
				}else{
					int tmp;
					if(binary_search(mp[a[i]].begin(), mp[a[i]].end(), i)){
					  auto it = lower_bound(mp[a[i]].begin(), mp[a[i]].end(), i);
					  tmp = *it;
					  mp[a[i]].erase(it);
					}else{
					  cnt++;
					  tmp = *mp[a[i]].begin();
            mp[a[i]].erase(mp[a[i]].begin());
					}
				  mp[b[i]].erase(mp[b[i]].lower_bound(i));
				  mp[b[i]].insert(tmp);
					swap(b[i], b[tmp]);
       	}
				
			}
		}
		if(!ok){
			cout << "NO";
		}else{
			if(cnt & 1){
				cout << "NO";
			}else cout << "YES";
		}
		cout << endl;
	}
}
