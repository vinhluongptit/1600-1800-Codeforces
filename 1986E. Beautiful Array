#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds;
const int mod = 1e9 + 7;
using ll = long long;
typedef tree<pair<int,int>, null_type, less<pair<int,int>>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;


int main() {
	ios::sync_with_stdio(false);
	cin.tie(NULL);
    int t;
    cin >> t;
    while(t--){
		int n, k; cin >> n >> k;
		vector<int> v(n);
		map<int, vector<int>> mp;
		for(int i = 0; i < n; i++){
			cin >> v[i];
			mp[v[i] % k].push_back(v[i]);
		}
		if(n == 1){
			cout << 0 << endl;
			continue;
		}
		int ok = 0;
		for(auto it : mp){
			if(it.second.size() & 1){
				ok++;
			}
		}
		if(n % 2 == 0){
			if(ok){
				cout << -1  << endl;
				continue;
			}
		}else{
			if(ok > 1){
				cout << -1 << endl;
				continue;
			}
		}
		ll ans = 0;
		for(auto it : mp){
			int tmp = it.second.size();
			sort(it.second.begin(), it.second.end());
			for(int i = 0; i < tmp-1; i += 2){
				ans += it.second[i+1]-it.second[i];
			}
			if(tmp & 1){
				int idx = tmp-1;
				ll tot = ans;
				while(idx > 1){
					tot -= it.second[idx-1] - it.second[idx-2];
					tot += it.second[idx] - it.second[idx-2];
					ans = min(ans, tot);
					tot -= it.second[idx] - it.second[idx-2];
					tot += it.second[idx] - it.second[idx-1];
					ans = min(ans, tot);
					idx -= 2;
				}
			}
		}
		cout << ans/k << endl;
	}
}
Â 
