#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds;
using ll = long long;
const int mod = 1e9 + 7;
typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;



int main() {
	ios::sync_with_stdio(false);cin.tie(nullptr); cout.tie(nullptr);
	int t;
	cin >> t;
	while(t--){
		string s; cin >> s;
		s = " " + s;
		int n = s.size()-1;
		vector<ll> a(n+1), p(n+1, 0);
		for(int i = 1; i <= n; i++){
			if(s[i] == '1') a[i] = 1;
			else a[i] = -1;
		}
		for(int i = 1; i <= n; i++){
			p[i] = p[i-1] + a[i];
		}
		ll ans = 0;
		map<int,ll> mp;
		for(int i = 0; i <= n; i++){
			ans = ans + ((n-i+1)*mp[p[i]]%mod)%mod;
			ans %= mod;
			mp[p[i]] = mp[p[i]] + (i+1) %mod;
			mp[p[i]] %= mod;
		}
		cout << ans%mod << endl;
	}
}
