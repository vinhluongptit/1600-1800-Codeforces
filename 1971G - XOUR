#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds;
const int mod = 1e9 + 7;
using ll = long long;
typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;



int main() {
	ios::sync_with_stdio(false);
	cin.tie(NULL);
    int t;
    cin >> t;
    while(t--){
		int n; cin >> n;
		vector<int> v(n);
		map<int,vector<pair<int,int>>> mp;
		for(int i = 0; i < n; i++){
			cin >> v[i];
			mp[v[i]/4].push_back({v[i], i});
		}
		for(auto it : mp){
			vector<int> val, indc;
			for(int i = 0; i < it.second.size(); i++){
				val.push_back(it.second[i].first);
				indc.push_back(it.second[i].second);
			}
			sort(val.begin(), val.end());
			sort(indc.begin(), indc.end());
			for(int i = 0; i < it.second.size(); i++){
				v[indc[i]] = val[i];
			}
		}
		for(int i = 0; i < n; i++){
			cout << v[i] << " ";
		}
		cout << endl;
	}
}

