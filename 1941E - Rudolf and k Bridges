#include <bits/stdc++.h>
using namespace std;
using ll = long long;
const int MAX_N = 1005;

int main() 
{
  int t;
  cin >> t;
  while(t--){
    int n, m, k, d;
    cin >> n >> m >> k >> d;
    vector<ll> a(n);
    for(int i = 0; i < n; i++){
      multiset<ll> mt;
      mt.insert(1);
      vector<ll> dp(m, 1e9);
      vector<ll> v(m);
      dp[0] = 1;
      cin >> v[0];
      for(int j = 1; j < m-1; j++){
        cin >> v[j];
        dp[j] = *mt.begin() + 1 + v[j];
        if(j-d-1 >= 0){
          mt.erase(mt.find(dp[j-d-1]));
        }
        mt.insert(dp[j]);
      }
      cin >> v.back();
      dp.back() = 1+*mt.begin();
      a[i] = dp.back();
    }
    long long cur = 0;
        for (int i = 0; i < k; i++)
            cur += a[i];

        long long mn = cur;

        for (int i = k; i < n; i++) {
            cur += a[i] - a[i - k];
            mn = min(cur, mn);
        }
        cout << mn << endl;
  }
}
